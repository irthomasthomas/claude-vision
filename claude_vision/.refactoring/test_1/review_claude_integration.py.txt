The refactored code introduces several improvements and best practices:

1. Enums: Introduced `OutputType` and `HttpStatusCode` enums for better type safety and readability.

2. Dataclass: Created a `RequestData` dataclass to structure the request data.

3. Error Handling: Implemented a `handle_api_errors` decorator for consistent error handling across the main function.

4. Function Decomposition: Split the main function into smaller, more focused functions (e.g., `create_headers`, `create_request_data`, `send_request`, etc.).

5. Type Hints: Improved type hinting throughout the code for better static analysis and readability.

6. Constants: Moved hardcoded values to constants at the top of the file.

7. Simplified Logic: Streamlined the process of creating the content list for images.

8. Consistent Naming: Used more consistent naming conventions (e.g., `OutputType` instead of string literals).

9. Error Messages: Improved error messages to include HTTP status codes.

10. Removed Unused Imports: Eliminated the unused `traceback` import.

These changes make the code more modular, easier to read and maintain, and less prone to errors. The use of enums and dataclasses also provides better structure and type safety to the code.